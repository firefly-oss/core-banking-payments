openapi: 3.0.1
info:
  title: core-baking-payments
  description: Payments Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.getfirefly.io/payments
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Payment Compliance
    description: APIs for managing payment compliance information
  - name: Payment Exchange Rates
    description: APIs for managing payment exchange rates
  - name: Payment Correspondence
    description: APIs for managing payment correspondence
  - name: Payment Audit
    description: APIs for accessing payment audit records
  - name: Payment Instructions
    description: APIs for managing payment instructions
  - name: Payment Beneficiaries
    description: APIs for managing payment beneficiaries
  - name: Payment Fees
    description: APIs for managing payment fees
  - name: Payment Providers
    description: APIs for managing payment providers
  - name: Payroll Orders
    description: APIs for managing payroll orders within a payment order
  - name: Payment Orders
    description: APIs for managing payment orders
  - name: Payment Proofs
    description: APIs for managing payment proofs
  - name: Payment Methods
    description: APIs for managing payment methods
  - name: Payment Schedules
    description: APIs for managing payment schedules
paths:
  /api/v1/payment-orders/{paymentOrderId}/schedules/{paymentScheduleId}:
    get:
      tags:
        - Payment Schedules
      summary: Get Payment Schedule by ID
      description: Retrieve a specific payment schedule by its unique identifier, within the context of a payment order.
      operationId: getPaymentScheduleById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentScheduleId
          in: path
          description: Unique identifier of the payment schedule
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleDTO'
        '404':
          description: Payment schedule not found
    put:
      tags:
        - Payment Schedules
      summary: Update Payment Schedule
      description: Update an existing payment schedule by its unique identifier.
      operationId: updatePaymentSchedule
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentScheduleId
          in: path
          description: Unique identifier of the payment schedule to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentScheduleDTO'
      responses:
        '200':
          description: Payment schedule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleDTO'
        '404':
          description: Payment schedule not found
    delete:
      tags:
        - Payment Schedules
      summary: Delete Payment Schedule
      description: Remove an existing payment schedule by its unique identifier, within the context of a payment order.
      operationId: deletePaymentSchedule
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentScheduleId
          in: path
          description: Unique identifier of the payment schedule to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment schedule deleted successfully
        '404':
          description: Payment schedule not found
  /api/v1/payment-orders/{paymentOrderId}/providers/{paymentProviderId}:
    get:
      tags:
        - Payment Providers
      summary: Get Payment Provider by ID
      description: Retrieve a specific payment provider by its unique identifier, within the context of a payment order.
      operationId: getPaymentProviderById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProviderId
          in: path
          description: Unique identifier of the payment provider
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProviderDTO'
        '404':
          description: Payment provider not found
    put:
      tags:
        - Payment Providers
      summary: Update Payment Provider
      description: Update an existing payment provider by its unique identifier.
      operationId: updatePaymentProvider
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProviderId
          in: path
          description: Unique identifier of the payment provider to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProviderDTO'
      responses:
        '200':
          description: Payment provider updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProviderDTO'
        '404':
          description: Payment provider not found
    delete:
      tags:
        - Payment Providers
      summary: Delete Payment Provider
      description: Remove an existing payment provider by its unique identifier, within the context of a payment order.
      operationId: deletePaymentProvider
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProviderId
          in: path
          description: Unique identifier of the payment provider to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment provider deleted successfully
        '404':
          description: Payment provider not found
  /api/v1/payment-orders/{paymentOrderId}/proof/{paymentProofId}:
    get:
      tags:
        - Payment Proofs
      summary: Get Payment Proof by ID
      description: Retrieve a specific payment proof by its unique identifier, within the context of a payment order.
      operationId: getPaymentProofById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProofId
          in: path
          description: Unique identifier of the payment proof
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment proof
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProofDTO'
        '404':
          description: Payment proof not found
    put:
      tags:
        - Payment Proofs
      summary: Update Payment Proof
      description: Update an existing payment proof by its unique identifier.
      operationId: updatePaymentProof
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProofId
          in: path
          description: Unique identifier of the payment proof to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProofDTO'
      responses:
        '200':
          description: Payment proof updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProofDTO'
        '404':
          description: Payment proof not found
    delete:
      tags:
        - Payment Proofs
      summary: Delete Payment Proof
      description: Remove an existing payment proof by its unique identifier, within the context of a payment order.
      operationId: deletePaymentProof
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentProofId
          in: path
          description: Unique identifier of the payment proof to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment proof deleted successfully
        '404':
          description: Payment proof not found
  /api/v1/payment-orders/{paymentOrderId}/payroll-orders/{payrollOrderId}:
    get:
      tags:
        - Payroll Orders
      summary: Get Payroll Order by ID
      description: Retrieve a specific payroll order by its unique identifier, within the context of a payment order.
      operationId: getPayrollOrderById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: payrollOrderId
          in: path
          description: Unique identifier of the payroll order
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payroll order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollOrderDTO'
        '404':
          description: Payroll order not found
    put:
      tags:
        - Payroll Orders
      summary: Update Payroll Order
      description: Update an existing payroll order by its unique identifier.
      operationId: updatePayrollOrder
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: payrollOrderId
          in: path
          description: Unique identifier of the payroll order to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollOrderDTO'
      responses:
        '200':
          description: Payroll order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollOrderDTO'
        '404':
          description: Payroll order not found
    delete:
      tags:
        - Payroll Orders
      summary: Delete Payroll Order
      description: Remove an existing payroll order by its unique identifier, within the context of a payment order.
      operationId: deletePayrollOrder
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: payrollOrderId
          in: path
          description: Unique identifier of the payroll order to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payroll order deleted successfully
        '404':
          description: Payroll order not found
  /api/v1/payment-orders/{paymentOrderId}/instructions/{paymentInstructionId}:
    get:
      tags:
        - Payment Instructions
      summary: Get Payment Instruction by ID
      description: Retrieve a specific payment instruction by its unique identifier, within the context of a payment order.
      operationId: getPaymentInstructionById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentInstructionId
          in: path
          description: Unique identifier of the payment instruction
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment instruction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionDTO'
        '404':
          description: Payment instruction not found
    put:
      tags:
        - Payment Instructions
      summary: Update Payment Instruction
      description: Update an existing payment instruction by its unique identifier.
      operationId: updatePaymentInstruction
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentInstructionId
          in: path
          description: Unique identifier of the payment instruction to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionDTO'
      responses:
        '200':
          description: Payment instruction updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionDTO'
        '404':
          description: Payment instruction not found
    delete:
      tags:
        - Payment Instructions
      summary: Delete Payment Instruction
      description: Remove an existing payment instruction by its unique identifier, within the context of a payment order.
      operationId: deletePaymentInstruction
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentInstructionId
          in: path
          description: Unique identifier of the payment instruction to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment instruction deleted successfully
        '404':
          description: Payment instruction not found
  /api/v1/payment-orders/{paymentOrderId}/fees/{paymentFeeId}:
    get:
      tags:
        - Payment Fees
      summary: Get Payment Fee by ID
      description: Retrieve a specific payment fee by its unique identifier within the context of a payment order.
      operationId: getPaymentFeeById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentFeeId
          in: path
          description: Unique identifier of the payment fee
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment fee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentFeeDTO'
        '404':
          description: Payment fee not found
    put:
      tags:
        - Payment Fees
      summary: Update Payment Fee
      description: Update an existing payment fee by its unique identifier.
      operationId: updatePaymentFee
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentFeeId
          in: path
          description: Unique identifier of the payment fee to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFeeDTO'
      responses:
        '200':
          description: Payment fee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentFeeDTO'
        '404':
          description: Payment fee not found
    delete:
      tags:
        - Payment Fees
      summary: Delete Payment Fee
      description: Remove an existing payment fee by its unique identifier, within the context of a payment order.
      operationId: deletePaymentFee
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentFeeId
          in: path
          description: Unique identifier of the payment fee to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment fee deleted successfully
        '404':
          description: Payment fee not found
  /api/v1/payment-orders/{paymentOrderId}/exchange-rates/{paymentExchangeRateId}:
    get:
      tags:
        - Payment Exchange Rates
      summary: Get Exchange Rate by ID
      description: Retrieves a specific exchange rate by its ID.
      operationId: getExchangeRateById
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentExchangeRateId
          in: path
          description: Payment Exchange Rate ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExchangeRateDTO'
        '404':
          description: Exchange rate not found
    put:
      tags:
        - Payment Exchange Rates
      summary: Update Exchange Rate
      description: Updates an exchange rate for a payment order.
      operationId: updateExchangeRate
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentExchangeRateId
          in: path
          description: Payment Exchange Rate ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentExchangeRateDTO'
        required: true
      responses:
        '200':
          description: Successfully updated exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExchangeRateDTO'
        '404':
          description: Exchange rate not found
    delete:
      tags:
        - Payment Exchange Rates
      summary: Delete Exchange Rate
      description: Deletes an exchange rate for a payment order.
      operationId: deleteExchangeRate
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentExchangeRateId
          in: path
          description: Payment Exchange Rate ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted exchange rate
        '404':
          description: Exchange rate not found
  /api/v1/payment-orders/{paymentOrderId}/correspondence/{paymentCorrespondenceId}:
    get:
      tags:
        - Payment Correspondence
      summary: Get Correspondence by ID
      description: Retrieves a specific correspondence by its ID.
      operationId: getCorrespondenceById
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentCorrespondenceId
          in: path
          description: Payment Correspondence ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCorrespondenceDTO'
        '404':
          description: Correspondence not found
    put:
      tags:
        - Payment Correspondence
      summary: Update Correspondence
      description: Updates a correspondence for a payment order.
      operationId: updateCorrespondence
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentCorrespondenceId
          in: path
          description: Payment Correspondence ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCorrespondenceDTO'
        required: true
      responses:
        '200':
          description: Successfully updated correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCorrespondenceDTO'
        '404':
          description: Correspondence not found
    delete:
      tags:
        - Payment Correspondence
      summary: Delete Correspondence
      description: Deletes a correspondence for a payment order.
      operationId: deleteCorrespondence
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentCorrespondenceId
          in: path
          description: Payment Correspondence ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted correspondence
        '404':
          description: Correspondence not found
  /api/v1/payment-orders/{paymentOrderId}/compliance/{paymentComplianceId}:
    put:
      tags:
        - Payment Compliance
      summary: Update Compliance Information
      description: Updates compliance information for a payment order.
      operationId: updateCompliance
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentComplianceId
          in: path
          description: Payment Compliance ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentComplianceDTO'
        required: true
      responses:
        '200':
          description: Successfully updated compliance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentComplianceDTO'
        '404':
          description: Compliance information not found
    delete:
      tags:
        - Payment Compliance
      summary: Delete Compliance Information
      description: Deletes compliance information for a payment order.
      operationId: deleteCompliance
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentComplianceId
          in: path
          description: Payment Compliance ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted compliance information
        '404':
          description: Compliance information not found
  /api/v1/payment-orders/{paymentOrderId}/compliance/reject:
    put:
      tags:
        - Payment Compliance
      summary: Reject Compliance
      description: Rejects compliance for a payment order.
      operationId: rejectCompliance
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: rejectionReason
          in: query
          required: true
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully rejected compliance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentComplianceDTO'
        '404':
          description: Compliance information not found
  /api/v1/payment-orders/{paymentOrderId}/compliance/approve:
    put:
      tags:
        - Payment Compliance
      summary: Approve Compliance
      description: Approves compliance for a payment order.
      operationId: approveCompliance
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: approvedBy
          in: query
          required: true
          schema:
            type: string
        - name: complianceNotes
          in: query
          required: false
          schema:
            type: string
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully approved compliance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentComplianceDTO'
        '404':
          description: Compliance information not found
  /api/v1/payment-orders/{paymentOrderId}:
    get:
      tags:
        - Payment Orders
      summary: Get Payment Order by ID
      description: Retrieve a specific payment order by its unique identifier.
      operationId: getPaymentOrderById
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderDTO'
        '404':
          description: Payment order not found
    put:
      tags:
        - Payment Orders
      summary: Update Payment Order
      description: Update an existing payment order by its unique identifier.
      operationId: updatePaymentOrder
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrderDTO'
      responses:
        '200':
          description: Payment order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderDTO'
        '404':
          description: Payment order not found
    delete:
      tags:
        - Payment Orders
      summary: Delete Payment Order
      description: Remove an existing payment order by its unique identifier.
      operationId: deletePaymentOrder
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment order deleted successfully
        '404':
          description: Payment order not found
  /api/v1/payment-methods/{paymentMethodId}:
    get:
      tags:
        - Payment Methods
      summary: Get Payment Method by ID
      description: Retrieve a specific payment method by its unique identifier.
      operationId: getPaymentMethodById
      parameters:
        - name: paymentMethodId
          in: path
          description: Unique identifier of the payment method
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the payment method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodDTO'
        '404':
          description: Payment method not found
    put:
      tags:
        - Payment Methods
      summary: Update Payment Method
      description: Update an existing payment method by its unique identifier.
      operationId: updatePaymentMethod
      parameters:
        - name: paymentMethodId
          in: path
          description: Unique identifier of the payment method to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodDTO'
      responses:
        '200':
          description: Payment method updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodDTO'
        '404':
          description: Payment method not found
    delete:
      tags:
        - Payment Methods
      summary: Delete Payment Method
      description: Remove an existing payment method by its unique identifier.
      operationId: deletePaymentMethod
      parameters:
        - name: paymentMethodId
          in: path
          description: Unique identifier of the payment method to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payment method deleted successfully
        '404':
          description: Payment method not found
  /api/v1/payment-beneficiaries/{paymentBeneficiaryId}/favorite:
    put:
      tags:
        - Payment Beneficiaries
      summary: Mark Beneficiary as Favorite
      description: Marks a beneficiary as favorite or removes favorite status.
      operationId: markAsFavorite
      parameters:
        - name: paymentBeneficiaryId
          in: path
          description: Payment Beneficiary ID
          required: true
          schema:
            type: string
            format: uuid
        - name: isFavorite
          in: query
          description: Is Favorite
          required: true
          schema:
            type: boolean
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully updated favorite status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        '404':
          description: Beneficiary not found
  /api/v1/payment-beneficiaries/{paymentBeneficiaryId}:
    get:
      tags:
        - Payment Beneficiaries
      summary: Get Beneficiary by ID
      description: Retrieves a specific beneficiary by its ID.
      operationId: getBeneficiaryById
      parameters:
        - name: paymentBeneficiaryId
          in: path
          description: Payment Beneficiary ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved beneficiary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        '404':
          description: Beneficiary not found
    put:
      tags:
        - Payment Beneficiaries
      summary: Update Beneficiary
      description: Updates a beneficiary.
      operationId: updateBeneficiary
      parameters:
        - name: paymentBeneficiaryId
          in: path
          description: Payment Beneficiary ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        required: true
      responses:
        '200':
          description: Successfully updated beneficiary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        '404':
          description: Beneficiary not found
    delete:
      tags:
        - Payment Beneficiaries
      summary: Delete Beneficiary
      description: Deletes a beneficiary.
      operationId: deleteBeneficiary
      parameters:
        - name: paymentBeneficiaryId
          in: path
          description: Payment Beneficiary ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted beneficiary
        '404':
          description: Beneficiary not found
  /api/v1/payment-orders/{paymentOrderId}/schedules:
    get:
      tags:
        - Payment Schedules
      summary: Retrieve Payment Schedules
      description: Retrieves a paginated list of payment schedules for a specific payment order, with optional filtering.
      operationId: getAllPaymentSchedules
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.scheduledDate
          in: query
          description: Exact filter for scheduled date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[scheduledDate].from
          in: query
          description: Filter scheduled date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[scheduledDate].to
          in: query
          description: Filter scheduled date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.amount
          in: query
          description: Exact filter for amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[amount].from
          in: query
          description: Filter amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[amount].to
          in: query
          description: Filter amount to value
          required: false
          schema:
            type: string
        - name: filters.frequency
          in: query
          description: Exact filter for frequency
          required: false
          schema:
            type: string
            enum:
              - ONE_TIME
              - DAILY
              - WEEKLY
              - MONTHLY
              - YEARLY
        - name: filters.scheduleStatus
          in: query
          description: Exact filter for schedule status
          required: false
          schema:
            type: string
            enum:
              - SCHEDULED
              - COMPLETED
              - CANCELLED
        - name: filters.endDate
          in: query
          description: Exact filter for end date
          required: false
          schema:
            type: string
        - name: filters.maxExecutions
          in: query
          description: Exact filter for max executions
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxExecutions].from
          in: query
          description: Filter max executions from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[maxExecutions].to
          in: query
          description: Filter max executions to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.currentExecutionCount
          in: query
          description: Exact filter for current execution count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[currentExecutionCount].from
          in: query
          description: Filter current execution count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[currentExecutionCount].to
          in: query
          description: Filter current execution count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.nextExecutionDate
          in: query
          description: Exact filter for next execution date
          required: false
          schema:
            type: string
        - name: filters.dayOfMonth
          in: query
          description: Exact filter for day of month
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[dayOfMonth].from
          in: query
          description: Filter day of month from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[dayOfMonth].to
          in: query
          description: Filter day of month to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.dayOfWeek
          in: query
          description: Exact filter for day of week
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[dayOfWeek].from
          in: query
          description: Filter day of week from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[dayOfWeek].to
          in: query
          description: Filter day of week to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.weekOfMonth
          in: query
          description: Exact filter for week of month
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[weekOfMonth].from
          in: query
          description: Filter week of month from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[weekOfMonth].to
          in: query
          description: Filter week of month to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.monthOfYear
          in: query
          description: Exact filter for month of year
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[monthOfYear].from
          in: query
          description: Filter month of year from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[monthOfYear].to
          in: query
          description: Filter month of year to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.scheduleNotes
          in: query
          description: Exact filter for schedule notes
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment schedules found
    post:
      tags:
        - Payment Schedules
      summary: Create Payment Schedule
      description: Creates a new payment schedule for the specified payment order.
      operationId: createPaymentSchedule
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentScheduleDTO'
      responses:
        '201':
          description: Payment schedule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentScheduleDTO'
        '400':
          description: Invalid payment schedule data provided
  /api/v1/payment-orders/{paymentOrderId}/providers:
    get:
      tags:
        - Payment Providers
      summary: Retrieve Payment Providers
      description: Retrieves a paginated list of payment providers for a specific payment order, with optional filtering.
      operationId: getAllPaymentProviders
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.providerName
          in: query
          description: Exact filter for provider name
          required: false
          schema:
            type: string
        - name: filters.externalReference
          in: query
          description: Exact filter for external reference
          required: false
          schema:
            type: string
        - name: filters.status
          in: query
          description: Exact filter for status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - PENDING
              - SUSPENDED
        - name: filters.providerType
          in: query
          description: Exact filter for provider type
          required: false
          schema:
            type: string
        - name: filters.providerUrl
          in: query
          description: Exact filter for provider url
          required: false
          schema:
            type: string
        - name: filters.providerApiKey
          in: query
          description: Exact filter for provider api key
          required: false
          schema:
            type: string
        - name: filters.providerUsername
          in: query
          description: Exact filter for provider username
          required: false
          schema:
            type: string
        - name: filters.providerFee
          in: query
          description: Exact filter for provider fee
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[providerFee].from
          in: query
          description: Filter provider fee from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[providerFee].to
          in: query
          description: Filter provider fee to value
          required: false
          schema:
            type: string
        - name: filters.providerFeeCurrencyCode
          in: query
          description: Exact filter for provider fee currency code
          required: false
          schema:
            type: string
        - name: filters.providerResponseCode
          in: query
          description: Exact filter for provider response code
          required: false
          schema:
            type: string
        - name: filters.providerResponseMessage
          in: query
          description: Exact filter for provider response message
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment providers found
    post:
      tags:
        - Payment Providers
      summary: Create Payment Provider
      description: Creates a new payment provider for the specified payment order.
      operationId: createPaymentProvider
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProviderDTO'
      responses:
        '201':
          description: Payment provider created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProviderDTO'
        '400':
          description: Invalid payment provider data provided
  /api/v1/payment-orders/{paymentOrderId}/proof:
    get:
      tags:
        - Payment Proofs
      summary: Retrieve Payment Proofs
      description: Retrieves a paginated list of payment proofs for a specific payment order, with optional filtering.
      operationId: getAllPaymentProofs
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.documentId
          in: query
          description: Exact filter for document id
          required: false
          schema:
            type: string
        - name: filters.proofType
          in: query
          description: Exact filter for proof type
          required: false
          schema:
            type: string
        - name: filters.proofDate
          in: query
          description: Exact filter for proof date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[proofDate].from
          in: query
          description: Filter proof date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[proofDate].to
          in: query
          description: Filter proof date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment proofs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment proofs found
    post:
      tags:
        - Payment Proofs
      summary: Create Payment Proof
      description: Creates a new payment proof for the specified payment order.
      operationId: createPaymentProof
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProofDTO'
      responses:
        '201':
          description: Payment proof created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProofDTO'
        '400':
          description: Invalid payment proof data provided
  /api/v1/payment-orders/{paymentOrderId}/payroll-orders:
    get:
      tags:
        - Payroll Orders
      summary: Retrieve Payroll Orders
      description: Retrieves a paginated list of payroll orders for the specified payment order, with optional filtering.
      operationId: getAllPayrollOrders
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.payrollReference
          in: query
          description: Exact filter for payroll reference
          required: false
          schema:
            type: string
        - name: filters.payrollDate
          in: query
          description: Exact filter for payroll date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[payrollDate].from
          in: query
          description: Filter payroll date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[payrollDate].to
          in: query
          description: Filter payroll date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.totalAmount
          in: query
          description: Exact filter for total amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].from
          in: query
          description: Filter total amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[totalAmount].to
          in: query
          description: Filter total amount to value
          required: false
          schema:
            type: string
        - name: filters.payrollStatus
          in: query
          description: Exact filter for payroll status
          required: false
          schema:
            type: string
            enum:
              - INITIATED
              - PROCESSED
              - FAILED
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payroll orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payroll orders found
    post:
      tags:
        - Payroll Orders
      summary: Create Payroll Order
      description: Creates a new payroll order for the specified payment order.
      operationId: createPayrollOrder
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollOrderDTO'
      responses:
        '201':
          description: Payroll order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollOrderDTO'
        '400':
          description: Invalid payroll order data provided
  /api/v1/payment-orders/{paymentOrderId}/instructions:
    get:
      tags:
        - Payment Instructions
      summary: Retrieve Payment Instructions
      description: Retrieves a paginated list of payment instructions based on filtering criteria, for a specific payment order.
      operationId: getAllPaymentInstructions
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.instructionType
          in: query
          description: Exact filter for instruction type
          required: false
          schema:
            type: string
            enum:
              - IMMEDIATE
              - SCHEDULED
        - name: filters.instructionDate
          in: query
          description: Exact filter for instruction date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[instructionDate].from
          in: query
          description: Filter instruction date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[instructionDate].to
          in: query
          description: Filter instruction date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.instructionStatus
          in: query
          description: Exact filter for instruction status
          required: false
          schema:
            type: string
            enum:
              - INITIATED
              - COMPLETED
              - FAILED
        - name: filters.externalReference
          in: query
          description: Exact filter for external reference
          required: false
          schema:
            type: string
        - name: filters.instructionPriority
          in: query
          description: Exact filter for instruction priority
          required: false
          schema:
            type: string
            enum:
              - NORMAL
              - HIGH
              - URGENT
        - name: filters.instructionNotes
          in: query
          description: Exact filter for instruction notes
          required: false
          schema:
            type: string
        - name: filters.retryCount
          in: query
          description: Exact filter for retry count
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[retryCount].from
          in: query
          description: Filter retry count from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[retryCount].to
          in: query
          description: Filter retry count to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.lastRetryDate
          in: query
          description: Exact filter for last retry date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastRetryDate].from
          in: query
          description: Filter last retry date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[lastRetryDate].to
          in: query
          description: Filter last retry date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.errorCode
          in: query
          description: Exact filter for error code
          required: false
          schema:
            type: string
        - name: filters.errorDescription
          in: query
          description: Exact filter for error description
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment instructions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment instructions found
    post:
      tags:
        - Payment Instructions
      summary: Create Payment Instruction
      description: Creates a new payment instruction for the specified payment order.
      operationId: createPaymentInstruction
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInstructionDTO'
      responses:
        '201':
          description: Payment instruction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionDTO'
        '400':
          description: Invalid payment instruction data provided
  /api/v1/payment-orders/{paymentOrderId}/fees:
    get:
      tags:
        - Payment Fees
      summary: Retrieve Payment Fees
      description: Retrieves a paginated list of payment fees for a specific payment order, with optional filtering.
      operationId: getAllPaymentFees
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.feeType
          in: query
          description: Exact filter for fee type
          required: false
          schema:
            type: string
        - name: filters.feeTypeEnum
          in: query
          description: Exact filter for fee type enum
          required: false
          schema:
            type: string
            enum:
              - TRANSACTION_FEE
              - PROCESSING_FEE
              - CURRENCY_CONVERSION_FEE
              - INTERNATIONAL_TRANSFER_FEE
              - URGENT_PROCESSING_FEE
              - CORRESPONDENT_BANK_FEE
        - name: filters.feeAmount
          in: query
          description: Exact filter for fee amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeAmount].from
          in: query
          description: Filter fee amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeAmount].to
          in: query
          description: Filter fee amount to value
          required: false
          schema:
            type: string
        - name: filters.feeCurrencyCode
          in: query
          description: Exact filter for fee currency code
          required: false
          schema:
            type: string
        - name: filters.feeDescription
          in: query
          description: Exact filter for fee description
          required: false
          schema:
            type: string
        - name: filters.feeCalculationMethod
          in: query
          description: Exact filter for fee calculation method
          required: false
          schema:
            type: string
        - name: filters.feeRate
          in: query
          description: Exact filter for fee rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeRate].from
          in: query
          description: Filter fee rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeRate].to
          in: query
          description: Filter fee rate to value
          required: false
          schema:
            type: string
        - name: filters.feeTaxAmount
          in: query
          description: Exact filter for fee tax amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeTaxAmount].from
          in: query
          description: Filter fee tax amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeTaxAmount].to
          in: query
          description: Filter fee tax amount to value
          required: false
          schema:
            type: string
        - name: filters.feeTaxRate
          in: query
          description: Exact filter for fee tax rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeTaxRate].from
          in: query
          description: Filter fee tax rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[feeTaxRate].to
          in: query
          description: Filter fee tax rate to value
          required: false
          schema:
            type: string
        - name: filters.feeTaxType
          in: query
          description: Exact filter for fee tax type
          required: false
          schema:
            type: string
        - name: filters.feeWaived
          in: query
          description: Exact filter for fee waived
          required: false
          schema:
            type: boolean
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment fees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment fees found
    post:
      tags:
        - Payment Fees
      summary: Create Payment Fee
      description: Creates a new payment fee for the specified payment order.
      operationId: createPaymentFee
      parameters:
        - name: paymentOrderId
          in: path
          description: Unique identifier of the payment order
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFeeDTO'
      responses:
        '201':
          description: Payment fee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentFeeDTO'
        '400':
          description: Invalid payment fee data provided
  /api/v1/payment-orders/{paymentOrderId}/exchange-rates:
    get:
      tags:
        - Payment Exchange Rates
      summary: Retrieve Exchange Rates by Payment Order ID
      description: Retrieves a paginated list of exchange rates for a specific payment order.
      operationId: getExchangeRatesByPaymentOrderId
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.sourceCurrency
          in: query
          description: Exact filter for source currency
          required: false
          schema:
            type: string
        - name: filters.targetCurrency
          in: query
          description: Exact filter for target currency
          required: false
          schema:
            type: string
        - name: filters.rate
          in: query
          description: Exact filter for rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[rate].from
          in: query
          description: Filter rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[rate].to
          in: query
          description: Filter rate to value
          required: false
          schema:
            type: string
        - name: filters.rateDate
          in: query
          description: Exact filter for rate date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[rateDate].from
          in: query
          description: Filter rate date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[rateDate].to
          in: query
          description: Filter rate date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.rateProvider
          in: query
          description: Exact filter for rate provider
          required: false
          schema:
            type: string
        - name: filters.rateType
          in: query
          description: Exact filter for rate type
          required: false
          schema:
            type: string
        - name: filters.markupPercentage
          in: query
          description: Exact filter for markup percentage
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[markupPercentage].from
          in: query
          description: Filter markup percentage from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[markupPercentage].to
          in: query
          description: Filter markup percentage to value
          required: false
          schema:
            type: string
        - name: filters.originalAmount
          in: query
          description: Exact filter for original amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[originalAmount].from
          in: query
          description: Filter original amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[originalAmount].to
          in: query
          description: Filter original amount to value
          required: false
          schema:
            type: string
        - name: filters.convertedAmount
          in: query
          description: Exact filter for converted amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[convertedAmount].from
          in: query
          description: Filter converted amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[convertedAmount].to
          in: query
          description: Filter converted amount to value
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved exchange rates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No exchange rates found
    post:
      tags:
        - Payment Exchange Rates
      summary: Create Exchange Rate
      description: Creates a new exchange rate for a payment order.
      operationId: createExchangeRate
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentExchangeRateDTO'
        required: true
      responses:
        '201':
          description: Successfully created exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExchangeRateDTO'
        '400':
          description: Invalid input
  /api/v1/payment-orders/{paymentOrderId}/correspondence:
    get:
      tags:
        - Payment Correspondence
      summary: Retrieve Correspondence
      description: Retrieves a paginated list of correspondence for a specific payment order.
      operationId: getCorrespondenceByPaymentOrderId
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.correspondenceType
          in: query
          description: Exact filter for correspondence type
          required: false
          schema:
            type: string
        - name: filters.correspondenceDate
          in: query
          description: Exact filter for correspondence date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[correspondenceDate].from
          in: query
          description: Filter correspondence date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[correspondenceDate].to
          in: query
          description: Filter correspondence date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.correspondenceChannel
          in: query
          description: Exact filter for correspondence channel
          required: false
          schema:
            type: string
        - name: filters.correspondenceDirection
          in: query
          description: Exact filter for correspondence direction
          required: false
          schema:
            type: string
        - name: filters.correspondentBank
          in: query
          description: Exact filter for correspondent bank
          required: false
          schema:
            type: string
        - name: filters.correspondentReference
          in: query
          description: Exact filter for correspondent reference
          required: false
          schema:
            type: string
        - name: filters.messageContent
          in: query
          description: Exact filter for message content
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No correspondence found
    post:
      tags:
        - Payment Correspondence
      summary: Create Correspondence
      description: Creates a new correspondence for a payment order.
      operationId: createCorrespondence
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCorrespondenceDTO'
        required: true
      responses:
        '201':
          description: Successfully created correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCorrespondenceDTO'
        '400':
          description: Invalid input
  /api/v1/payment-orders/{paymentOrderId}/compliance:
    get:
      tags:
        - Payment Compliance
      summary: Retrieve Compliance Information
      description: Retrieves compliance information for a specific payment order.
      operationId: getComplianceByPaymentOrderId
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.screeningStatus
          in: query
          description: Exact filter for screening status
          required: false
          schema:
            type: string
        - name: filters.screeningDate
          in: query
          description: Exact filter for screening date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[screeningDate].from
          in: query
          description: Filter screening date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[screeningDate].to
          in: query
          description: Filter screening date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.screeningReference
          in: query
          description: Exact filter for screening reference
          required: false
          schema:
            type: string
        - name: filters.riskScore
          in: query
          description: Exact filter for risk score
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[riskScore].from
          in: query
          description: Filter risk score from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[riskScore].to
          in: query
          description: Filter risk score to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.riskLevel
          in: query
          description: Exact filter for risk level
          required: false
          schema:
            type: string
        - name: filters.complianceNotes
          in: query
          description: Exact filter for compliance notes
          required: false
          schema:
            type: string
        - name: filters.amlCheckStatus
          in: query
          description: Exact filter for aml check status
          required: false
          schema:
            type: string
        - name: filters.sanctionsCheckStatus
          in: query
          description: Exact filter for sanctions check status
          required: false
          schema:
            type: string
        - name: filters.pepCheckStatus
          in: query
          description: Exact filter for pep check status
          required: false
          schema:
            type: string
        - name: filters.kycCheckStatus
          in: query
          description: Exact filter for kyc check status
          required: false
          schema:
            type: string
        - name: filters.approvedBy
          in: query
          description: Exact filter for approved by
          required: false
          schema:
            type: string
        - name: filters.approvalDate
          in: query
          description: Exact filter for approval date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvalDate].from
          in: query
          description: Filter approval date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[approvalDate].to
          in: query
          description: Filter approval date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.rejectionReason
          in: query
          description: Exact filter for rejection reason
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved compliance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No compliance information found
    post:
      tags:
        - Payment Compliance
      summary: Create Compliance Information
      description: Creates compliance information for a payment order.
      operationId: createCompliance
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentComplianceDTO'
        required: true
      responses:
        '201':
          description: Successfully created compliance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentComplianceDTO'
        '400':
          description: Invalid input
  /api/v1/payment-orders:
    get:
      tags:
        - Payment Orders
      summary: Retrieve Payment Orders
      description: Retrieves a paginated list of payment orders based on filtering criteria.
      operationId: getAllPaymentOrders
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.payerAccountId
          in: query
          description: Exact filter for payer account id
          required: false
          schema:
            type: string
        - name: filters.paymentMethodId
          in: query
          description: Exact filter for payment method id
          required: false
          schema:
            type: string
        - name: filters.paymentBeneficiaryId
          in: query
          description: Exact filter for payment beneficiary id
          required: false
          schema:
            type: string
        - name: filters.beneficiaryName
          in: query
          description: Exact filter for beneficiary name
          required: false
          schema:
            type: string
        - name: filters.beneficiaryAccountNumber
          in: query
          description: Exact filter for beneficiary account number
          required: false
          schema:
            type: string
        - name: filters.beneficiaryIban
          in: query
          description: Exact filter for beneficiary iban
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBic
          in: query
          description: Exact filter for beneficiary bic
          required: false
          schema:
            type: string
        - name: filters.beneficiaryAddress
          in: query
          description: Exact filter for beneficiary address
          required: false
          schema:
            type: string
        - name: filters.beneficiaryCountryCode
          in: query
          description: Exact filter for beneficiary country code
          required: false
          schema:
            type: string
        - name: filters.abaRoutingNumber
          in: query
          description: Exact filter for aba routing number
          required: false
          schema:
            type: string
        - name: filters.paymentType
          in: query
          description: Exact filter for payment type
          required: false
          schema:
            type: string
            enum:
              - SEPA_SCT
              - SEPA_ICT
              - SEPA_DIRECT_DEBIT
              - INTERNAL
              - SWIFT
              - PAYROLL
        - name: filters.orderDate
          in: query
          description: Exact filter for order date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[orderDate].from
          in: query
          description: Filter order date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[orderDate].to
          in: query
          description: Filter order date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.status
          in: query
          description: Exact filter for status
          required: false
          schema:
            type: string
            enum:
              - INITIATED
              - COMPLETED
              - FAILED
        - name: filters.amount
          in: query
          description: Exact filter for amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[amount].from
          in: query
          description: Filter amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[amount].to
          in: query
          description: Filter amount to value
          required: false
          schema:
            type: string
        - name: filters.currencyCode
          in: query
          description: Exact filter for currency code
          required: false
          schema:
            type: string
        - name: filters.swiftBicCode
          in: query
          description: Exact filter for swift bic code
          required: false
          schema:
            type: string
        - name: filters.remittanceInformation
          in: query
          description: Exact filter for remittance information
          required: false
          schema:
            type: string
        - name: filters.referenceNumber
          in: query
          description: Exact filter for reference number
          required: false
          schema:
            type: string
        - name: filters.priority
          in: query
          description: Exact filter for priority
          required: false
          schema:
            type: string
            enum:
              - NORMAL
              - HIGH
              - URGENT
        - name: filters.purpose
          in: query
          description: Exact filter for purpose
          required: false
          schema:
            type: string
            enum:
              - INVOICE_PAYMENT
              - SALARY_PAYMENT
              - SUPPLIER_PAYMENT
              - TAX_PAYMENT
              - UTILITY_PAYMENT
              - LOAN_PAYMENT
              - INVESTMENT
              - DONATION
              - OTHER
        - name: filters.purposeCode
          in: query
          description: Exact filter for purpose code
          required: false
          schema:
            type: string
        - name: filters.channel
          in: query
          description: Exact filter for channel
          required: false
          schema:
            type: string
            enum:
              - ONLINE_BANKING
              - MOBILE_APP
              - BRANCH
              - ATM
              - API
              - BATCH
        - name: filters.category
          in: query
          description: Exact filter for category
          required: false
          schema:
            type: string
            enum:
              - DOMESTIC
              - INTERNATIONAL
              - INTERNAL
        - name: filters.exchangeRate
          in: query
          description: Exact filter for exchange rate
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[exchangeRate].from
          in: query
          description: Filter exchange rate from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[exchangeRate].to
          in: query
          description: Filter exchange rate to value
          required: false
          schema:
            type: string
        - name: filters.chargeBearer
          in: query
          description: Exact filter for charge bearer
          required: false
          schema:
            type: string
        - name: filters.beneficiaryType
          in: query
          description: Exact filter for beneficiary type
          required: false
          schema:
            type: string
            enum:
              - INDIVIDUAL
              - BUSINESS
              - GOVERNMENT
        - name: filters.beneficiaryBankName
          in: query
          description: Exact filter for beneficiary bank name
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBankAddress
          in: query
          description: Exact filter for beneficiary bank address
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBankCountryCode
          in: query
          description: Exact filter for beneficiary bank country code
          required: false
          schema:
            type: string
        - name: filters.intermediaryBankName
          in: query
          description: Exact filter for intermediary bank name
          required: false
          schema:
            type: string
        - name: filters.intermediaryBankBic
          in: query
          description: Exact filter for intermediary bank bic
          required: false
          schema:
            type: string
        - name: filters.intermediaryBankAccount
          in: query
          description: Exact filter for intermediary bank account
          required: false
          schema:
            type: string
        - name: filters.regulatoryReporting
          in: query
          description: Exact filter for regulatory reporting
          required: false
          schema:
            type: string
        - name: filters.taxInformation
          in: query
          description: Exact filter for tax information
          required: false
          schema:
            type: string
        - name: filters.valueDate
          in: query
          description: Exact filter for value date
          required: false
          schema:
            type: string
        - name: filters.requestedExecutionDate
          in: query
          description: Exact filter for requested execution date
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment orders found
    post:
      tags:
        - Payment Orders
      summary: Create Payment Order
      description: Create a new payment order.
      operationId: createPaymentOrder
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentOrderDTO'
      responses:
        '201':
          description: Payment order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOrderDTO'
        '400':
          description: Invalid payment order data provided
  /api/v1/payment-methods:
    get:
      tags:
        - Payment Methods
      summary: Retrieve Payment Methods
      description: Retrieves a paginated list of payment methods based on filtering criteria.
      operationId: getAllPaymentMethods
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.methodName
          in: query
          description: Exact filter for method name
          required: false
          schema:
            type: string
        - name: filters.description
          in: query
          description: Exact filter for description
          required: false
          schema:
            type: string
        - name: filters.activeFlag
          in: query
          description: Exact filter for active flag
          required: false
          schema:
            type: boolean
        - name: filters.processingTimeHours
          in: query
          description: Exact filter for processing time hours
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[processingTimeHours].from
          in: query
          description: Filter processing time hours from value
          required: false
          schema:
            type: integer
            format: int32
        - name: rangeFilters.ranges[processingTimeHours].to
          in: query
          description: Filter processing time hours to value
          required: false
          schema:
            type: integer
            format: int32
        - name: filters.minAmount
          in: query
          description: Exact filter for min amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[minAmount].from
          in: query
          description: Filter min amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[minAmount].to
          in: query
          description: Filter min amount to value
          required: false
          schema:
            type: string
        - name: filters.maxAmount
          in: query
          description: Exact filter for max amount
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[maxAmount].from
          in: query
          description: Filter max amount from value
          required: false
          schema:
            type: string
        - name: rangeFilters.ranges[maxAmount].to
          in: query
          description: Filter max amount to value
          required: false
          schema:
            type: string
        - name: filters.supportedCurrencies
          in: query
          description: Exact filter for supported currencies
          required: false
          schema:
            type: string
            description: Comma-separated values for collection/array filtering
        - name: filters.requiresIntermediaryBank
          in: query
          description: Exact filter for requires intermediary bank
          required: false
          schema:
            type: boolean
        - name: filters.requiresRegulatoryReporting
          in: query
          description: Exact filter for requires regulatory reporting
          required: false
          schema:
            type: boolean
        - name: filters.requiresPurposeCode
          in: query
          description: Exact filter for requires purpose code
          required: false
          schema:
            type: boolean
        - name: filters.defaultPriority
          in: query
          description: Exact filter for default priority
          required: false
          schema:
            type: string
            enum:
              - NORMAL
              - HIGH
              - URGENT
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved payment methods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No payment methods found
    post:
      tags:
        - Payment Methods
      summary: Create Payment Method
      description: Creates a new payment method.
      operationId: createPaymentMethod
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodDTO'
      responses:
        '201':
          description: Payment method created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodDTO'
        '400':
          description: Invalid payment method data provided
  /api/v1/payment-beneficiaries:
    get:
      tags:
        - Payment Beneficiaries
      summary: Retrieve Beneficiaries
      description: Retrieves a paginated list of beneficiaries with optional filtering.
      operationId: getAllBeneficiaries
      parameters:
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.payerAccountId
          in: query
          description: Exact filter for payer account id
          required: false
          schema:
            type: string
        - name: filters.beneficiaryName
          in: query
          description: Exact filter for beneficiary name
          required: false
          schema:
            type: string
        - name: filters.beneficiaryType
          in: query
          description: Exact filter for beneficiary type
          required: false
          schema:
            type: string
            enum:
              - INDIVIDUAL
              - BUSINESS
              - GOVERNMENT
        - name: filters.beneficiaryAccountNumber
          in: query
          description: Exact filter for beneficiary account number
          required: false
          schema:
            type: string
        - name: filters.beneficiaryIban
          in: query
          description: Exact filter for beneficiary iban
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBic
          in: query
          description: Exact filter for beneficiary bic
          required: false
          schema:
            type: string
        - name: filters.beneficiaryAddress
          in: query
          description: Exact filter for beneficiary address
          required: false
          schema:
            type: string
        - name: filters.beneficiaryCity
          in: query
          description: Exact filter for beneficiary city
          required: false
          schema:
            type: string
        - name: filters.beneficiaryPostalCode
          in: query
          description: Exact filter for beneficiary postal code
          required: false
          schema:
            type: string
        - name: filters.beneficiaryCountryCode
          in: query
          description: Exact filter for beneficiary country code
          required: false
          schema:
            type: string
        - name: filters.beneficiaryEmail
          in: query
          description: Exact filter for beneficiary email
          required: false
          schema:
            type: string
        - name: filters.beneficiaryPhone
          in: query
          description: Exact filter for beneficiary phone
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBankName
          in: query
          description: Exact filter for beneficiary bank name
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBankAddress
          in: query
          description: Exact filter for beneficiary bank address
          required: false
          schema:
            type: string
        - name: filters.beneficiaryBankCountryCode
          in: query
          description: Exact filter for beneficiary bank country code
          required: false
          schema:
            type: string
        - name: filters.isFavorite
          in: query
          description: Exact filter for is favorite
          required: false
          schema:
            type: boolean
        - name: filters.nickname
          in: query
          description: Exact filter for nickname
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved beneficiaries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No beneficiaries found
    post:
      tags:
        - Payment Beneficiaries
      summary: Create Beneficiary
      description: Creates a new beneficiary.
      operationId: createBeneficiary
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        required: true
      responses:
        '201':
          description: Successfully created beneficiary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentBeneficiaryDTO'
        '400':
          description: Invalid input
  /api/v1/payment-orders/{paymentOrderId}/instructions/{paymentInstructionId}/audit:
    get:
      tags:
        - Payment Audit
      summary: Retrieve Audit Records by Payment Instruction ID
      description: Retrieves a paginated list of audit records for a specific payment instruction.
      operationId: getAuditsByPaymentInstructionId
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: paymentInstructionId
          in: path
          description: Payment Instruction ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.paymentInstructionId
          in: query
          description: Exact filter for payment instruction id
          required: false
          schema:
            type: string
        - name: filters.action
          in: query
          description: Exact filter for action
          required: false
          schema:
            type: string
        - name: filters.actionDate
          in: query
          description: Exact filter for action date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[actionDate].from
          in: query
          description: Filter action date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[actionDate].to
          in: query
          description: Filter action date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.actionBy
          in: query
          description: Exact filter for action by
          required: false
          schema:
            type: string
        - name: filters.previousStatus
          in: query
          description: Exact filter for previous status
          required: false
          schema:
            type: string
        - name: filters.newStatus
          in: query
          description: Exact filter for new status
          required: false
          schema:
            type: string
        - name: filters.ipAddress
          in: query
          description: Exact filter for ip address
          required: false
          schema:
            type: string
        - name: filters.userAgent
          in: query
          description: Exact filter for user agent
          required: false
          schema:
            type: string
        - name: filters.additionalInfo
          in: query
          description: Exact filter for additional info
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved audit records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No audit records found
  /api/v1/payment-orders/{paymentOrderId}/correspondence/type/{correspondenceType}:
    get:
      tags:
        - Payment Correspondence
      summary: Retrieve Correspondence by Type
      description: Retrieves a paginated list of correspondence for a specific payment order and correspondence type.
      operationId: getCorrespondenceByPaymentOrderIdAndType
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: correspondenceType
          in: path
          description: Correspondence Type
          required: true
          schema:
            type: string
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.correspondenceType
          in: query
          description: Exact filter for correspondence type
          required: false
          schema:
            type: string
        - name: filters.correspondenceDate
          in: query
          description: Exact filter for correspondence date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[correspondenceDate].from
          in: query
          description: Filter correspondence date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[correspondenceDate].to
          in: query
          description: Filter correspondence date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.correspondenceChannel
          in: query
          description: Exact filter for correspondence channel
          required: false
          schema:
            type: string
        - name: filters.correspondenceDirection
          in: query
          description: Exact filter for correspondence direction
          required: false
          schema:
            type: string
        - name: filters.correspondentBank
          in: query
          description: Exact filter for correspondent bank
          required: false
          schema:
            type: string
        - name: filters.correspondentReference
          in: query
          description: Exact filter for correspondent reference
          required: false
          schema:
            type: string
        - name: filters.messageContent
          in: query
          description: Exact filter for message content
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved correspondence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No correspondence found
  /api/v1/payment-orders/{paymentOrderId}/audit:
    get:
      tags:
        - Payment Audit
      summary: Retrieve Audit Records by Payment Order ID
      description: Retrieves a paginated list of audit records for a specific payment order.
      operationId: getAuditsByPaymentOrderId
      parameters:
        - name: paymentOrderId
          in: path
          description: Payment Order ID
          required: true
          schema:
            type: string
            format: uuid
        - name: pagination.pageNumber
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pagination.pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: pagination.sortBy
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
        - name: pagination.sortDirection
          in: query
          description: Sort direction (ASC or DESC)
          required: false
          schema:
            type: string
            default: DESC
        - name: options.caseInsensitiveStrings
          in: query
          description: Enable case-insensitive string filtering
          required: false
          schema:
            type: boolean
            default: false
        - name: options.includeInheritedFields
          in: query
          description: Include fields from parent classes
          required: false
          schema:
            type: boolean
            default: false
        - name: filters.paymentOrderId
          in: query
          description: Exact filter for payment order id
          required: false
          schema:
            type: string
        - name: filters.paymentInstructionId
          in: query
          description: Exact filter for payment instruction id
          required: false
          schema:
            type: string
        - name: filters.action
          in: query
          description: Exact filter for action
          required: false
          schema:
            type: string
        - name: filters.actionDate
          in: query
          description: Exact filter for action date
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[actionDate].from
          in: query
          description: Filter action date from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[actionDate].to
          in: query
          description: Filter action date to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.actionBy
          in: query
          description: Exact filter for action by
          required: false
          schema:
            type: string
        - name: filters.previousStatus
          in: query
          description: Exact filter for previous status
          required: false
          schema:
            type: string
        - name: filters.newStatus
          in: query
          description: Exact filter for new status
          required: false
          schema:
            type: string
        - name: filters.ipAddress
          in: query
          description: Exact filter for ip address
          required: false
          schema:
            type: string
        - name: filters.userAgent
          in: query
          description: Exact filter for user agent
          required: false
          schema:
            type: string
        - name: filters.additionalInfo
          in: query
          description: Exact filter for additional info
          required: false
          schema:
            type: string
        - name: filters.dateCreated
          in: query
          description: Exact filter for date created
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].from
          in: query
          description: Filter date created from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateCreated].to
          in: query
          description: Filter date created to value
          required: false
          schema:
            type: string
            format: date-time
        - name: filters.dateUpdated
          in: query
          description: Exact filter for date updated
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].from
          in: query
          description: Filter date updated from value
          required: false
          schema:
            type: string
            format: date-time
        - name: rangeFilters.ranges[dateUpdated].to
          in: query
          description: Filter date updated to value
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved audit records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '404':
          description: No audit records found
  /api/v1/exchange-rates:
    get:
      tags:
        - Payment Exchange Rates
      summary: Get Current Exchange Rate
      description: Retrieves the current exchange rate for a currency pair.
      operationId: getCurrentExchangeRate
      parameters:
        - name: sourceCurrency
          in: query
          description: Source Currency
          required: true
          schema:
            type: string
        - name: targetCurrency
          in: query
          description: Target Currency
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentExchangeRateDTO'
        '400':
          description: Invalid input
  /api/v1/audit/{paymentAuditId}:
    get:
      tags:
        - Payment Audit
      summary: Get Audit Record by ID
      description: Retrieves a specific audit record by its ID.
      operationId: getAuditById
      parameters:
        - name: paymentAuditId
          in: path
          description: Payment Audit ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved audit record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuditDTO'
        '404':
          description: Audit record not found
components:
  schemas:
    PaymentScheduleDTO:
      required:
        - amount
        - frequency
        - paymentOrderId
        - scheduleStatus
        - scheduledDate
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentScheduleId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        scheduledDate:
          type: string
          format: date-time
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        frequency:
          type: string
          enum:
            - ONE_TIME
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
        scheduleStatus:
          type: string
          enum:
            - SCHEDULED
            - COMPLETED
            - CANCELLED
        endDate:
          type: string
          format: date
        maxExecutions:
          maximum: 9999
          minimum: 1
          type: integer
          format: int32
        currentExecutionCount:
          minimum: 0
          type: integer
          format: int32
        nextExecutionDate:
          type: string
          format: date
        dayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          format: int32
        dayOfWeek:
          maximum: 7
          minimum: 1
          type: integer
          format: int32
        weekOfMonth:
          maximum: 5
          minimum: 1
          type: integer
          format: int32
        monthOfYear:
          maximum: 12
          minimum: 1
          type: integer
          format: int32
        scheduleNotes:
          maxLength: 500
          minLength: 0
          type: string
    PaymentProviderDTO:
      required:
        - paymentOrderId
        - providerName
        - providerType
        - status
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentProviderId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        providerName:
          maxLength: 255
          minLength: 0
          type: string
        externalReference:
          maxLength: 100
          minLength: 0
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - PENDING
            - SUSPENDED
        providerType:
          maxLength: 50
          minLength: 0
          type: string
        providerUrl:
          maxLength: 500
          minLength: 0
          pattern: ^https?://.*
          type: string
        providerApiKey:
          maxLength: 255
          minLength: 0
          type: string
        providerUsername:
          maxLength: 100
          minLength: 0
          type: string
        providerAccountId:
          maxLength: 100
          minLength: 0
          type: string
        providerFee:
          minimum: 0
          exclusiveMinimum: false
          type: number
        providerFeeCurrencyCode:
          pattern: ^[A-Z]{3}$
          type: string
        providerResponseCode:
          maxLength: 20
          minLength: 0
          type: string
        providerResponseMessage:
          maxLength: 500
          minLength: 0
          type: string
        providerTransactionId:
          maxLength: 100
          minLength: 0
          type: string
    PaymentProofDTO:
      required:
        - documentId
        - paymentOrderId
        - proofDate
        - proofType
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentProofId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        documentId:
          type: string
          format: uuid
        proofType:
          maxLength: 50
          minLength: 0
          type: string
        proofDate:
          type: string
          format: date-time
    PayrollOrderDTO:
      required:
        - paymentOrderId
        - payrollDate
        - payrollReference
        - payrollStatus
        - totalAmount
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        payrollOrderId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        payrollReference:
          maxLength: 100
          minLength: 0
          type: string
        payrollDate:
          type: string
          format: date-time
        totalAmount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        payrollStatus:
          type: string
          enum:
            - INITIATED
            - PROCESSED
            - FAILED
    PaymentInstructionDTO:
      required:
        - instructionDate
        - instructionId
        - instructionStatus
        - instructionType
        - paymentOrderId
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentInstructionId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        instructionId:
          maxLength: 50
          minLength: 0
          type: string
        instructionType:
          type: string
          enum:
            - IMMEDIATE
            - SCHEDULED
        instructionDate:
          type: string
          format: date-time
        instructionStatus:
          type: string
          enum:
            - INITIATED
            - COMPLETED
            - FAILED
        externalReference:
          maxLength: 100
          minLength: 0
          type: string
        instructionPriority:
          type: string
          enum:
            - NORMAL
            - HIGH
            - URGENT
        instructionNotes:
          maxLength: 500
          minLength: 0
          type: string
        retryCount:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
        lastRetryDate:
          type: string
          format: date-time
        errorCode:
          maxLength: 20
          minLength: 0
          type: string
        errorDescription:
          maxLength: 500
          minLength: 0
          type: string
    PaymentFeeDTO:
      required:
        - feeAmount
        - feeCurrencyCode
        - feeTypeEnum
        - feeWaived
        - paymentOrderId
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentFeeId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        feeType:
          maxLength: 50
          minLength: 0
          type: string
        feeTypeEnum:
          type: string
          enum:
            - TRANSACTION_FEE
            - PROCESSING_FEE
            - CURRENCY_CONVERSION_FEE
            - INTERNATIONAL_TRANSFER_FEE
            - URGENT_PROCESSING_FEE
            - CORRESPONDENT_BANK_FEE
        feeAmount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        feeCurrencyCode:
          pattern: ^[A-Z]{3}$
          type: string
        feeDescription:
          maxLength: 255
          minLength: 0
          type: string
        feeCalculationMethod:
          maxLength: 100
          minLength: 0
          type: string
        feeRate:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        feeTaxAmount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        feeTaxRate:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        feeTaxType:
          maxLength: 50
          minLength: 0
          type: string
        feeWaived:
          type: boolean
    PaymentExchangeRateDTO:
      required:
        - convertedAmount
        - originalAmount
        - paymentOrderId
        - rate
        - rateDate
        - rateProvider
        - rateType
        - sourceCurrency
        - targetCurrency
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentExchangeRateId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        sourceCurrency:
          pattern: ^[A-Z]{3}$
          type: string
        targetCurrency:
          pattern: ^[A-Z]{3}$
          type: string
        rate:
          minimum: 0.0001
          exclusiveMinimum: false
          type: number
        rateDate:
          type: string
          format: date-time
        rateProvider:
          maxLength: 100
          minLength: 0
          type: string
        rateType:
          pattern: ^(SPOT|FORWARD|FIXED)$
          type: string
        markupPercentage:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        originalAmount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        convertedAmount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
    PaymentCorrespondenceDTO:
      required:
        - correspondenceChannel
        - correspondenceDate
        - correspondenceDirection
        - correspondenceType
        - messageContent
        - paymentOrderId
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentCorrespondenceId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        correspondenceType:
          maxLength: 50
          minLength: 0
          type: string
        correspondenceDate:
          type: string
          format: date-time
        correspondenceChannel:
          maxLength: 50
          minLength: 0
          type: string
        correspondenceDirection:
          pattern: ^(INBOUND|OUTBOUND)$
          type: string
        correspondentBank:
          maxLength: 255
          minLength: 0
          type: string
        correspondentReference:
          maxLength: 100
          minLength: 0
          type: string
        messageContent:
          maxLength: 2000
          minLength: 0
          type: string
        attachmentId:
          type: string
          format: uuid
    PaymentComplianceDTO:
      required:
        - paymentOrderId
        - screeningStatus
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentComplianceId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        screeningStatus:
          pattern: ^(PENDING|APPROVED|REJECTED|IN_PROGRESS)$
          type: string
        screeningDate:
          type: string
          format: date-time
        screeningReference:
          maxLength: 100
          minLength: 0
          type: string
        riskScore:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        riskLevel:
          pattern: ^(LOW|MEDIUM|HIGH|CRITICAL)$
          type: string
        complianceNotes:
          maxLength: 1000
          minLength: 0
          type: string
        amlCheckStatus:
          pattern: ^(PASS|FAIL|PENDING|NOT_APPLICABLE)$
          type: string
        sanctionsCheckStatus:
          pattern: ^(PASS|FAIL|PENDING|NOT_APPLICABLE)$
          type: string
        pepCheckStatus:
          pattern: ^(PASS|FAIL|PENDING|NOT_APPLICABLE)$
          type: string
        kycCheckStatus:
          pattern: ^(PASS|FAIL|PENDING|NOT_APPLICABLE)$
          type: string
        approvedBy:
          maxLength: 255
          minLength: 0
          type: string
        approvalDate:
          type: string
          format: date-time
        rejectionReason:
          maxLength: 500
          minLength: 0
          type: string
    PaymentOrderDTO:
      required:
        - amount
        - beneficiaryName
        - currencyCode
        - orderDate
        - payerAccountId
        - paymentMethodId
        - paymentType
        - status
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
          readOnly: true
        payerAccountId:
          type: string
          format: uuid
        paymentMethodId:
          type: string
          format: uuid
        paymentBeneficiaryId:
          type: string
          format: uuid
        beneficiaryName:
          maxLength: 255
          minLength: 0
          type: string
        beneficiaryAccountNumber:
          maxLength: 50
          minLength: 0
          type: string
        beneficiaryIban:
          pattern: ^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{7}([A-Z0-9]?){0,16}$
          type: string
        beneficiaryBic:
          pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
          type: string
        beneficiaryAddress:
          maxLength: 500
          minLength: 0
          type: string
        beneficiaryCountryCode:
          pattern: ^[A-Z]{2}$
          type: string
        abaRoutingNumber:
          pattern: ^[0-9]{9}$
          type: string
        paymentType:
          type: string
          enum:
            - SEPA_SCT
            - SEPA_ICT
            - SEPA_DIRECT_DEBIT
            - INTERNAL
            - SWIFT
            - PAYROLL
        orderDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - INITIATED
            - COMPLETED
            - FAILED
        amount:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        currencyCode:
          pattern: ^[A-Z]{3}$
          type: string
        swiftBicCode:
          pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
          type: string
        remittanceInformation:
          maxLength: 140
          minLength: 0
          type: string
        documentId:
          type: string
          format: uuid
        referenceNumber:
          maxLength: 35
          minLength: 0
          type: string
        endToEndId:
          maxLength: 35
          minLength: 0
          type: string
        priority:
          type: string
          enum:
            - NORMAL
            - HIGH
            - URGENT
        purpose:
          type: string
          enum:
            - INVOICE_PAYMENT
            - SALARY_PAYMENT
            - SUPPLIER_PAYMENT
            - TAX_PAYMENT
            - UTILITY_PAYMENT
            - LOAN_PAYMENT
            - INVESTMENT
            - DONATION
            - OTHER
        purposeCode:
          maxLength: 10
          minLength: 0
          type: string
        channel:
          type: string
          enum:
            - ONLINE_BANKING
            - MOBILE_APP
            - BRANCH
            - ATM
            - API
            - BATCH
        category:
          type: string
          enum:
            - DOMESTIC
            - INTERNATIONAL
            - INTERNAL
        exchangeRate:
          minimum: 0.0001
          exclusiveMinimum: false
          type: number
        chargeBearer:
          pattern: ^(OUR|BEN|SHA)$
          type: string
        beneficiaryType:
          type: string
          enum:
            - INDIVIDUAL
            - BUSINESS
            - GOVERNMENT
        beneficiaryBankName:
          maxLength: 255
          minLength: 0
          type: string
        beneficiaryBankAddress:
          maxLength: 500
          minLength: 0
          type: string
        beneficiaryBankCountryCode:
          pattern: ^[A-Z]{2}$
          type: string
        intermediaryBankName:
          maxLength: 255
          minLength: 0
          type: string
        intermediaryBankBic:
          pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
          type: string
        intermediaryBankAccount:
          maxLength: 50
          minLength: 0
          type: string
        regulatoryReporting:
          maxLength: 1000
          minLength: 0
          type: string
        taxInformation:
          maxLength: 500
          minLength: 0
          type: string
        batchId:
          maxLength: 50
          minLength: 0
          type: string
        valueDate:
          type: string
          format: date
        requestedExecutionDate:
          type: string
          format: date
    PaymentMethodDTO:
      required:
        - activeFlag
        - methodName
        - requiresIntermediaryBank
        - requiresPurposeCode
        - requiresRegulatoryReporting
        - supportedCurrencies
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentMethodId:
          type: string
          format: uuid
          readOnly: true
        methodName:
          maxLength: 50
          minLength: 0
          type: string
        description:
          maxLength: 255
          minLength: 0
          type: string
        activeFlag:
          type: boolean
        processingTimeHours:
          maximum: 8760
          minimum: 0
          type: integer
          format: int32
        minAmount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        maxAmount:
          minimum: 0
          exclusiveMinimum: false
          type: number
        supportedCurrencies:
          maxItems: 10
          minItems: 1
          type: array
          items:
            type: string
        requiresIntermediaryBank:
          type: boolean
        requiresRegulatoryReporting:
          type: boolean
        requiresPurposeCode:
          type: boolean
        defaultPriority:
          type: string
          enum:
            - NORMAL
            - HIGH
            - URGENT
    PaymentBeneficiaryDTO:
      required:
        - beneficiaryName
        - beneficiaryType
        - isFavorite
        - payerAccountId
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentBeneficiaryId:
          type: string
          format: uuid
          readOnly: true
        payerAccountId:
          type: string
          format: uuid
        beneficiaryName:
          maxLength: 255
          minLength: 0
          type: string
        beneficiaryType:
          type: string
          enum:
            - INDIVIDUAL
            - BUSINESS
            - GOVERNMENT
        beneficiaryAccountNumber:
          maxLength: 50
          minLength: 0
          type: string
        beneficiaryIban:
          pattern: ^[A-Z]{2}[0-9]{2}[A-Z0-9]{11,30}$
          type: string
        beneficiaryBic:
          pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
          type: string
        beneficiaryAddress:
          maxLength: 500
          minLength: 0
          type: string
        beneficiaryCity:
          maxLength: 100
          minLength: 0
          type: string
        beneficiaryPostalCode:
          pattern: ^[A-Z0-9]{3,10}$
          type: string
        beneficiaryCountryCode:
          pattern: ^[A-Z]{2}$
          type: string
        beneficiaryEmail:
          maxLength: 255
          minLength: 0
          type: string
        beneficiaryPhone:
          pattern: ^\+?[1-9]\d{1,14}$
          type: string
        beneficiaryTaxId:
          maxLength: 50
          minLength: 0
          type: string
        beneficiaryBankName:
          maxLength: 255
          minLength: 0
          type: string
        beneficiaryBankAddress:
          maxLength: 500
          minLength: 0
          type: string
        beneficiaryBankCountryCode:
          pattern: ^[A-Z]{2}$
          type: string
        isFavorite:
          type: boolean
        nickname:
          maxLength: 100
          minLength: 0
          type: string
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    PaymentAuditDTO:
      required:
        - action
        - actionBy
        - actionDate
        - paymentOrderId
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        dateUpdated:
          type: string
          format: date-time
          readOnly: true
        paymentAuditId:
          type: string
          format: uuid
          readOnly: true
        paymentOrderId:
          type: string
          format: uuid
        paymentInstructionId:
          type: string
          format: uuid
        action:
          maxLength: 100
          minLength: 0
          type: string
        actionDate:
          type: string
          format: date-time
        actionBy:
          maxLength: 255
          minLength: 0
          type: string
        previousStatus:
          maxLength: 50
          minLength: 0
          type: string
        newStatus:
          maxLength: 50
          minLength: 0
          type: string
        ipAddress:
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$
          type: string
        userAgent:
          maxLength: 500
          minLength: 0
          type: string
        additionalInfo:
          maxLength: 1000
          minLength: 0
          type: string
